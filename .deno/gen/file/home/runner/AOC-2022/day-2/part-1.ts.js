"use strict";
const input = await Deno.readTextFile("./input.txt");
const rounds = input.split("\n");
let totalScore = 0;
function translate(key) {
    return ({
        'X': 'A',
        'Y': 'B',
        'Z': 'C'
    })[key];
}
rounds.forEach(round => {
    let [opposite, me] = round.split(" ");
    me = translate(me);
    let score = 0;
    if (me === 'A')
        score += 1;
    if (me === 'B')
        score += 2;
    if (me === 'C')
        score += 3;
    if (opposite === me)
        score += 3;
    if (opposite === 'A' && me === 'B')
        score += 6;
    if (opposite === 'B' && me === 'C')
        score += 6;
    if (opposite === 'C' && me === 'A')
        score += 6;
    totalScore += score;
});
console.log(totalScore);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZmlsZTovLy9ob21lL3J1bm5lci9BT0MtMjAyMi9kYXktMi9wYXJ0LTEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sS0FBSyxHQUFHLE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUVyRCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRWpDLElBQUksVUFBVSxHQUFHLENBQUMsQ0FBQztBQUVuQixTQUFTLFNBQVMsQ0FBQyxHQUFXO0lBQzVCLE9BQU8sQ0FBQztRQUNOLEdBQUcsRUFBRSxHQUFHO1FBQ1IsR0FBRyxFQUFFLEdBQUc7UUFDUixHQUFHLEVBQUUsR0FBRztLQUNULENBQUMsQ0FBQyxHQUFHLENBQVcsQ0FBQztBQUNwQixDQUFDO0FBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtJQUNyQixJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdEMsRUFBRSxHQUFHLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUVuQixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7SUFFZCxJQUFHLEVBQUUsS0FBSyxHQUFHO1FBQUUsS0FBSyxJQUFJLENBQUMsQ0FBQztJQUMxQixJQUFHLEVBQUUsS0FBSyxHQUFHO1FBQUUsS0FBSyxJQUFJLENBQUMsQ0FBQztJQUMxQixJQUFHLEVBQUUsS0FBSyxHQUFHO1FBQUUsS0FBSyxJQUFJLENBQUMsQ0FBQztJQUUxQixJQUFHLFFBQVEsS0FBSyxFQUFFO1FBQUUsS0FBSyxJQUFJLENBQUMsQ0FBQztJQUMvQixJQUFHLFFBQVEsS0FBSyxHQUFHLElBQUksRUFBRSxLQUFLLEdBQUc7UUFBRSxLQUFLLElBQUksQ0FBQyxDQUFDO0lBQzlDLElBQUcsUUFBUSxLQUFLLEdBQUcsSUFBSSxFQUFFLEtBQUssR0FBRztRQUFFLEtBQUssSUFBSSxDQUFDLENBQUM7SUFDOUMsSUFBRyxRQUFRLEtBQUssR0FBRyxJQUFJLEVBQUUsS0FBSyxHQUFHO1FBQUUsS0FBSyxJQUFJLENBQUMsQ0FBQztJQUU5QyxVQUFVLElBQUksS0FBSyxDQUFDO0FBQ3RCLENBQUMsQ0FBQyxDQUFBO0FBRUYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGlucHV0ID0gYXdhaXQgRGVuby5yZWFkVGV4dEZpbGUoXCIuL2lucHV0LnR4dFwiKTtcblxuY29uc3Qgcm91bmRzID0gaW5wdXQuc3BsaXQoXCJcXG5cIik7XG5cbmxldCB0b3RhbFNjb3JlID0gMDtcblxuZnVuY3Rpb24gdHJhbnNsYXRlKGtleTogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuICh7XG4gICAgJ1gnOiAnQScsXG4gICAgJ1knOiAnQicsXG4gICAgJ1onOiAnQydcbiAgfSlba2V5XSBhcyBzdHJpbmc7XG59XG5cbnJvdW5kcy5mb3JFYWNoKHJvdW5kID0+IHtcbiAgbGV0IFtvcHBvc2l0ZSwgbWVdID0gcm91bmQuc3BsaXQoXCIgXCIpO1xuICBtZSA9IHRyYW5zbGF0ZShtZSk7XG4gIFxuICBsZXQgc2NvcmUgPSAwO1xuXG4gIGlmKG1lID09PSAnQScpIHNjb3JlICs9IDE7XG4gIGlmKG1lID09PSAnQicpIHNjb3JlICs9IDI7XG4gIGlmKG1lID09PSAnQycpIHNjb3JlICs9IDM7XG5cbiAgaWYob3Bwb3NpdGUgPT09IG1lKSBzY29yZSArPSAzO1xuICBpZihvcHBvc2l0ZSA9PT0gJ0EnICYmIG1lID09PSAnQicpIHNjb3JlICs9IDY7XG4gIGlmKG9wcG9zaXRlID09PSAnQicgJiYgbWUgPT09ICdDJykgc2NvcmUgKz0gNjtcbiAgaWYob3Bwb3NpdGUgPT09ICdDJyAmJiBtZSA9PT0gJ0EnKSBzY29yZSArPSA2O1xuXG4gIHRvdGFsU2NvcmUgKz0gc2NvcmU7XG59KVxuXG5jb25zb2xlLmxvZyh0b3RhbFNjb3JlKSJdfQ==